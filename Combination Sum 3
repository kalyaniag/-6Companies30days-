class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> result = new ArrayList();
        backtrack(1,9,new ArrayList(),result,k,n);
        return result;
    }
    void backtrack(int start, int end,List<Integer> current, List<List<Integer>> result, int k, int target){

        if(target==0 && current.size()==k){
           result.add(new ArrayList(current));
           return; 
        }

        for(int i= start; i<=end;i++){
            current.add(i);
            backtrack(i+1,end,current,result,k,target-i);
            current.remove(current.size()-1);
        }
    }
}
